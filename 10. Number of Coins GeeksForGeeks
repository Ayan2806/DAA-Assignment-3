def minCoins(coins, M, V):
    # Create a DP array to store the minimum coins for each value from 0 to V
    dp = [float('inf')] * (V + 1)

    # Base case: No coins are needed to make the value 0
    dp[0] = 0

    # Compute minimum coins required for all values from 1 to V
    for i in range(1, V + 1):
        for coin in coins:
            if coin <= i:
                dp[i] = min(dp[i], dp[i - coin] + 1)

    # If dp[V] is still infinity, it means it's not possible to make that amount
    return dp[V] if dp[V] != float('inf') else -1

# Example usage
coins = [1, 5, 10]  # coin denominations
V = 11
result = minCoins(coins, len(coins), V)
print("Minimum no. of coins:", result)
