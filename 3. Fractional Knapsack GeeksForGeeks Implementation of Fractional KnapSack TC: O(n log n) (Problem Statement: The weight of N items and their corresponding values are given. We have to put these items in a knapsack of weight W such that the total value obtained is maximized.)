class Item:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight

def fractional_knapsack(W, arr):
    arr.sort(key=lambda x: (x.value / x.weight), reverse=True)
    total_value = 0.0
    for item in arr:
        if W >= item.weight:
            total_value += item.value
            W -= item.weight
        else:
            total_value += item.value * (W / item.weight)
            break
    return total_value

if __name__ == "__main__":
    # Input the number of items
    n = int(input())
    
    # Input the maximum capacity of the knapsack
    W = int(input())
    
    # Input the value and weight of each item
    items = []
    for i in range(n):
        value, weight = map(int, input().split(","))
        items.append(Item(value, weight))

    # Calculate and print the maximum value for the given knapsack capacity
    max_value = fractional_knapsack(W, items)
    print("Maximum value in Knapsack =", max_value)
